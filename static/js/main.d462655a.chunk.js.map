{"version":3,"sources":["components/Nosotros.js","components/Contacto.js","components/Error.js","components/Producto.js","components/Buscador.js","components/Productos.js","components/ProductoShowcase.js","components/Header.js","components/Nav.js","components/Router.js","components/App.js","serviceWorker.js","index.js"],"names":["Nosotros","className","src","Contacto","state","enviar","e","preventDefault","currentTarget","reset","onSubmit","this","type","placeholder","value","Component","Error","Producto","props","data","id","descripcion","imagen","nombre","precio","to","Buscador","leerBusqueda","busqueda","target","onChange","Productos","productos","map","producto","key","ProductoShowcase","Header","Nav","activeClassName","Router","terminoBusqueda","busquedaProducto","setState","dataProductos","filtrado","filter","toLowerCase","indexOf","exact","path","render","component","idProd","match","params","productoId","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d462655a.chunk.js","sourcesContent":["\nimport React from 'react';\n\nimport '../css/Nosotros.css'\n\nconst Nosotros = () => {\n    return (\n        <div className=\"contenedor-nosotros\">   \n\n           <div className=\"imagen\">\n                    <img src=\"/img/camisa_8.png\"/>\n                </div>\n\n            <div className=\"contenido\">\n                <h2> Lorem ipsum dolor sit amet </h2>\n\n                <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce lobortis, massa a tincidunt interdum, leo ipsum viverra nunc, ut interdum magna diam sed tortor. Nulla vulputate non arcu at viverra.\n                \n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Nosotros;","import React, { Component } from 'react';\n\nimport '../css/Contacto.css'\nclass Contacto extends Component {\n    state = {  }\n    \n    enviar = (e) => {\n        e.preventDefault()\n        e.currentTarget.reset()\n    }\n\n    render() {\n        return (\n                <form onSubmit={this.enviar}>\n                    <legend> Formulario de Contacto</legend>\n\n                    <div className=\"input-field\">\n                        <label> Nombre: </label>\n                        <input type=\"text\" placeholder=\"Tu nombre\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label> Email: </label>\n                        <input type=\"email\" placeholder=\"Tu email\"/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label> Mensaje: </label>\n                        <textarea> </textarea>\n                    </div>\n\n                    <div className=\"input-field enviar\">\n                        <input type=\"submit\" value=\"Enviar\"/>\n                    </div>\n\n                </form>\n            );\n        }\n}\n \nexport default Contacto;","import React, { Component } from 'react';\n\nclass Error extends Component {\n    state = {  }\n    render() { \n        return ( \n            <h1> Ruta inexistente </h1>\n         );\n    }\n}\n \nexport default Error;","import React, { Component } from 'react';\n\nimport {Link} from 'react-router-dom'\n\n\nclass Producto extends Component {\n   \n    state = {  }\n    \n    render() { \n\n        const {descripcion,id,imagen,nombre,precio} = this.props.data\n        \n        return ( \n            <li>\n                <img src={`/img/${imagen}.png`}/>\n                <p> {nombre} <span> $ {precio} </span> </p>\n                <Link to={`/producto/${id}`}> Mas info </Link>\n            </li>\n         );\n    }\n}\n \nexport default Producto;\n","import React, { Component } from 'react';\n\nimport '../css/Buscador.css'\n\nclass Buscador extends Component {\n\n    leerBusqueda = (e) => {\n\n        const busqueda = e.target.value\n\n        this.props.busqueda(busqueda)\n\n    }\n\n    render() { \n        return (  \n            <form onChange={this.leerBusqueda} className=\"buscador\">\n                <input type=\"text\" placeholder=\"Busqueda\"/>\n            </form>\n        );\n    }\n}\n \nexport default Buscador;","import React, { Component, Fragment } from 'react';\n\nimport Producto from './Producto'\nimport Buscador from './Buscador'\n\nimport '../css/Productos.css'\n\nclass Productos extends Component {\n\n    render() { \n\n\n        const productos = this.props.productos\n\n        return (  \n\n\n            <Fragment>\n                <Buscador\n                    busqueda = {this.props.busqueda}\n                />\n\n                <div className=\"productos\">\n                    <h2> Nuestros Productos </h2>\n\n                    <ul className=\"lista-productos\">\n                        {productos.map( producto => {\n                        return <Producto key={producto.id} data={producto}/>\n                        })}\n                    </ul>\n                </div>\n            </Fragment>\n        );\n    }\n}\n \nexport default Productos;","import React, { Component } from 'react';\n\nimport '../css/ProductoShowcase.css'\n\nclass ProductoShowcase extends Component {\n   \n    state = {  }\n    \n    render() { \n\n\n        if(!this.props.data) {\n            return null\n        }\n\n        const {descripcion,id,imagen,nombre,precio} = this.props.data\n        \n        return ( \n           <div className=\"info-producto\">\n                <div className=\"imagen\">\n                     <img src={`/img/${imagen}.png`}/>\n                </div>\n\n                <div className=\"info\">\n                    <h2> {nombre} </h2>\n                    <p className=\"precio\">$ {precio}</p>\n                    <p> {descripcion} </p>\n\n                </div>\n                \n           </div>\n         );\n    }\n}\n \nexport default ProductoShowcase;\n","import React from 'react';\nimport '../css/App.css';\n\nimport { Link } from 'react-router-dom'\n\n\nconst Header = (props) => {\n    return (\n        <header>\n            <Link to={'/'}>\n                 <img className=\"img1\" src=\"/img/store.png\"/>\n            </Link>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nimport '../css/Nav.css'\n\nconst Nav = () => {\n    return (\n        <div>\n            <nav className=\"navegacion\">\n                <NavLink to={'/nosotros'} activeClassName=\"activo\"> Nosotros </NavLink>\n                <NavLink to={'/productos'} activeClassName=\"activo\"> Productos </NavLink>\n                <NavLink to={'/contacto'} activeClassName=\"activo\"> Contacto </NavLink>\n            </nav>\n        </div>\n    );\n};\n\nexport default Nav;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Nosotros from './Nosotros'\nimport Contacto from './Contacto'\nimport Error from './Error'\nimport Productos from './Productos';\nimport dataProductos from '../data/data.json'\n\nimport ProductoShowcase from './ProductoShowcase'\nimport Header from './Header';\nimport Nav from './Nav'\n\n\n\n\nclass Router extends Component {\n\n    state = { \n        productos : [],\n        terminoBusqueda : ''\n    }\n\n    componentWillMount() {\n        this.setState({\n          productos : dataProductos\n        })\n    }\n\n    busquedaProducto = (busqueda) => {\n       \n          this.setState({\n            terminoBusqueda: busqueda\n          })\n\n     }\n\n    \n    render() { \n\n        let productos = [...this.state.productos]\n\n        let busqueda = this.state.terminoBusqueda\n\n        let filtrado\n\n        if (busqueda !== '') {\n            filtrado = productos.filter( producto => (\n                producto.nombre.toLowerCase().indexOf( busqueda.toLowerCase()) !== -1\n            ))\n        } else {\n            filtrado = productos\n        }\n\n\n\n        return ( \n            <BrowserRouter>\n                    \n                <Header/>\n\n                <Nav/>\n\n                <Switch>\n                    \n                    <Route exact path=\"/\" render={ (props) => (\n                        <Productos\n                        busqueda={this.busquedaProducto}\n                        productos = {filtrado}\n                        />\n                    )}/>\n\n                    <Route exact path=\"/contacto\" component={Contacto}/>\n\n                    <Route exact path=\"/nosotros\" component={Nosotros}/>\n\n                    <Route exact path=\"/productos\" render={ () => (\n                        <Productos\n                            productos = {filtrado}\n                            busqueda={this.busquedaProducto}\n\n                        />\n                    )}/>\n\n                    <Route exact path=\"/producto/:productoId\" render={ (props) => {\n                        \n                        const idProd = props.match.params.productoId\n\n                        return (<ProductoShowcase\n                            data={this.state.productos[idProd]}\n                        />)\n                    }}\n                    />\n\n\n                    <Route component={Error}/>\n                </Switch>\n            \n            </BrowserRouter>\n         );\n    }\n}\n \nexport default Router;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport Router from './Router'\n\n\nclass App extends Component {\n  state = { \n  }\n\n  render() { \n    return (\n        <div className=\"contenedor\">\n            <Router/>\n        </div>\n      );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}